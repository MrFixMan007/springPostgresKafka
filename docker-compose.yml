services:
  postgres_db:
    container_name: postgres
    image: postgres:latest
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5432:5432"
    expose:
      - 5432
    networks:
      - spring-postgres
      - pgadmin-bd
    restart: always
    env_file:
      - .env
    
  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:latest
    depends_on:
      - postgres_db
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
    networks:
      - pgadmin-bd
    ports:
      - "5050:80"
    restart: always
    env_file:
      - .env

  data-service:
    build:
      context: ./data_service
    depends_on:
      - api-service
    container_name: 'data-service'
    networks:
      - spring-postgres
      - kafka-data-service-network
      - services
    ports:
      - "8081:8080"

  api-service:
    build:
      context: ./api_service
    networks: 
      - kafka-api-service-network
      - services
    depends_on:
      - kafka
    container_name: 'api-service'
    ports:
      - "8082:8090"
  
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 2181:2181
    networks:
      - kafka-zookeeper
      
  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    networks:
      - kafka-data-service-network
      - kafka-api-service-network
      - kafka-zookeeper
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    expose:
      - "9093"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9093,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

networks:
  spring-postgres:
  pgadmin-bd:
  kafka-data-service-network:
  kafka-zookeeper:
  kafka-api-service-network:
  services: